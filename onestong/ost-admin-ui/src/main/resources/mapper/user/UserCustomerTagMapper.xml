<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oz.onestong.dao.user.UserCustomerTagMapper">


	<select id="selectCustomersByTag" parameterType="map"
		resultType="java.util.HashMap">

		select c.* from customers_tags ct , customers c where ct.c_id =
		c.customer_id and ct.ct_id = #{tagId,jdbcType=INTEGER}

	</select>


	<select id="selectCustomersByUser" parameterType="map"
		resultType="java.util.HashMap">

		select uc.u_id as user_id,c.* from users_customers uc ,customers c where uc.c_id =
		c.customer_id and uc.u_id = #{userId,jdbcType=INTEGER}
		and c.valid = 0
	</select>


	<select id="selectTagsByUser" parameterType="map" resultType="java.util.HashMap">

		select ct.* from users_tags ut, customer_tag ct
		where ut.ct_id = ct.ct_id and
		ct.valid = 0 and
		ut.user_id = #{userId,jdbcType=INTEGER}
		order by ct.update_time desc;

	</select>



	<insert id="insertUserAndTag" parameterType="map">

		insert into users_tags(user_id,ct_id) values(
		#{user.userId,jdbcType=INTEGER},
		#{tag.ctId,jdbcType=INTEGER}
		)

	</insert>

	<insert id="insertCustomerAndTag" parameterType="map">

		insert into customers_tags(ct_id,c_id)
		values
		<foreach collection="customerIds" item="item" index="index"
			separator=",">
			(#{tagId,jdbcType=INTEGER},#{item,jdbcType=INTEGER})
		</foreach>
	</insert>

	<delete id="deleteUserAndTag" parameterType="map">

		delete from users_tags where user_id = #{userId,jdbcType=INTEGER} and
		ct_id in (
		<foreach collection="tagIds" item="item" index="index"
			separator=",">
			#{item,jdbcType=INTEGER}
		</foreach>
		)

	</delete>
	<delete id="deleteCustomerAndTag" parameterType="map">
		delete from customers_tags where ct_id in (
		<foreach collection="tagIds" item="item" index="index"
			separator=",">
			#{item,jdbcType=INTEGER}
		</foreach>
		)
	</delete>



	<delete id="deleteCustomersByTag" parameterType="map">
		delete from customers_tags where ct_id = #{tagId,jdbcType=INTEGER} and
		c_id in (
		<foreach collection="customerIds" item="item" index="index"
			separator=",">
			#{item,jdbcType=INTEGER}
		</foreach>
		)
	</delete>

	<insert id="insertUserAndCustomer" parameterType="map">
		insert
		into users_customers(u_id,c_id)
		values(#{userId,jdbcType=INTEGER},#{customerId,jdbcType=INTEGER})

	</insert>



</mapper>