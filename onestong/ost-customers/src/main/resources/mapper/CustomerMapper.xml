<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ost.customers.dao.CustomerDao">


	<select id="selectByIds" resultType="org.ost.entity.customer.Customer">

		select id,name from tbl_customer tc
		<where>
			tc.id in
			<foreach item="id" collection="ids" open="(" separator=","
				close=")">
				#{id}
			</foreach>
			and isDelete = 0
		</where>
	</select>

	<select id="selectCustomerCount" resultType="java.lang.Integer">
		select
		count(1)
		from tbl_customer
		<where>
			<trim prefixOverrides="AND |OR">
				<if test="customer.name != null and customer.name != ''">
					instr(name,#{customer.name}) > 0
				</if>
				<if test="customer.py != null and customer.py != ''">
					and instr(py,#{customer.py}) > 0
				</if>
				<if test="customer.szm != null and customer.szm != ''">
					and instr(szm,#{customer.szm}) > 0
				</if>
				<if test="keyword != null and keyword !=''">
					and instr(name,#{keyword}) >0
				</if>

				<if test="params != null">
					<trim prefix="and">
						<foreach item="key" collection="params.keys" open="("
							separator="and" close=")">
							property ->
							'$.${key}' =
							#{params[${key}],jdbcType=VARCHAR}
						</foreach>
					</trim>
				</if>
				and schemaId = #{customer.schemaId,jdbcType=VARCHAR}
				and isDelete =
				0
			</trim>

		</where>
	</select>




	<select id="selectCustomers" resultType="org.ost.entity.customer.Customer">
		select
		id,
		name,
		py,
		szm,
		parentId,
		property ,
		createTime,
		createBy,
		updateTime,
		isDelete,
		schemaId
		from tbl_customer
		<where>
			<trim prefixOverrides="AND |OR">
				<if test="customer.name != null and customer.name != ''">
					and instr(name,#{customer.name}) > 0
				</if>
				<if test="customer.py != null and customer.py != ''">
					and instr(py,#{customer.py}) > 0
				</if>
				<if test="customer.szm != null and customer.szm != ''">
					and instr(szm,#{customer.szm}) > 0
				</if>
				<if test="keyword != null and keyword != ''">
					and instr(name,#{keyword}) > 0
				</if>
				<if test="paramsMap != null">
					<trim prefix="and">
						<foreach item="key" collection="paramsMap.keys" open="("
							separator="and" close=")">
							property ->
							'$.${key}' =
							#{paramsMap[${key}],jdbcType=VARCHAR}
						</foreach>
					</trim>
				</if>
				and schemaId = #{customer.schemaId,jdbcType=VARCHAR}
				and isDelete =
				0
			</trim>

		</where>
	</select>

	<update id="updateCustomerSelective">
		update tbl_customer
		<set>
			<if test="customer.name != null and customer.name != ''">
				name = #{customer.name},
			</if>
			<if test="customer.property != null">
				property = JSON_SET(property,
				<foreach collection="customer.property.keys" item="key"
					separator=",">
					'$.${key}',#{customer.property[key]}
				</foreach>
				)
			</if>
		</set>
		where id = #{customer.id}
		and schemaId = #{customer.schemaId}
	</update>


	<select id="selectCustomerOrg" resultType="org.ost.entity.customer.org.CustomerOrg">

		select * from tbl_organize_customer toc
		<where>
			toc.customerID in
			<foreach item="customerId" collection="customerIds" open="("
				separator="," close=")">
				#{customerId}
			</foreach>
			and isDelete = 0
		</where>
	</select>


	<select id="selectCustomerUsers" resultType="org.ost.entity.customer.user.UserCustomers">

		select * from tbl_user_customer tuc
		<where>
			tuc.customerID in
			<foreach item="customerId" collection="customerIds" open="("
				separator="," close=")">
				#{customerId}
			</foreach>
			and isDelete = 0
		</where>
	</select>

	<select id="selectByProject" resultType="org.ost.entity.customer.vo.CustomerVo">
		select
		tc.id,
		tc.name
		from tbl_customer tc left join tbl_project_customer
		tpc
		on(tc.schemaID,tc.id) =(tpc.schemaID,tpc.customerID)
		<where>
			tpc.projectID = #{projectId} and tpc.schemaID = #{schemaId}
		</where>
	</select>

	<!-- 客户报表 -->
	<select id="selectReportByParam" resultType="org.ost.entity.report.dto.KeHuReportDto">
		SELECT
		tbl_customer.id
		,tbl_customer.`name`
		,tbl_customer.property->'$.type' as type
		,tbl_customer.property->'$.dealFrequency' as dealFrequency
		,tbl_customer.property->'$.turnover' as turnover
		,tbl_customer.property->'$.isPlc' as isPlc
		,tbl_customer.property->'$.nature' as nature
		,tbl_customer.property->'$.source' as source
		,tbl_customer.property->'$.belongIndustry' as belongIndustry
		,tbl_customer.createTime
		<include refid="searchListSQL"></include>
		order by
		tbl_customer.createTime desc
	</select>

	<select id="selectReportCount" resultType="java.lang.Integer">
		SELECT count(1)
		<include refid="searchListSQL"></include>
	</select>

	<sql id="searchListSQL">
		FROM tbl_customer
		WHERE
		1=1
		<if test='managerOwnerName!=null and managerOwnerName!=""'>
		and	tbl_customer.id in (
			select
			customerID
			from
			tbl_user_customer
			where
			userName like CONCAT('%','${managerOwnerName}', '%')
			)
		</if>
		<if test='params.type !=null and params.type !=""'>
			and property ->
			'$.type' =#{params.type}
		</if>
		<if test='params.dealFrequency !=null and params.dealFrequency !=""'>
			and property ->
			'$.dealFrequency' =#{params.dealFrequency}
		</if>
		<if test='params.turnover !=null and params.turnover !=""'>
			and property ->
			'$.turnover' =#{params.turnover}
		</if>
		<if test='params.isPlc !=null and params.isPlc !=""'>
			and property ->
			'$.isPlc' =#{params.isPlc}
		</if>
		<if test='params.nature !=null and params.nature !=""'>
			and property ->
			'$.nature' =#{params.nature}
		</if>
		<if test='params.source !=null and params.source !=""'>
			and property ->
			'$.source' =#{params.source}
		</if>
		<if test='params.belongIndustry !=null and params.belongIndustry !=""'>
			and property ->
			'$.belongIndustry'
			=#{params.belongIndustry}
		</if>
		<if test='params.startDate != null and params.startDate != ""'>
			and tbl_customer.createTime >= #{params.startDate}
		</if>
		<if test='params.startDate != null and params.startDate != ""'>
			and tbl_customer.createTime &lt;= #{params.endDate}
		</if>
	</sql>

</mapper>