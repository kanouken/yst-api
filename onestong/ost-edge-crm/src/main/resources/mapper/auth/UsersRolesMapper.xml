<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ost.crm.dao.auth.UsersRolesMapper">

	<resultMap id="BaseResultMap" type="org.ost.crm.model.auth.Role">

		<id column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="role_code" property="roleCode" jdbcType="VARCHAR" />
		<result column="role_desc" property="roleDesc" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="creator" property="creator" jdbcType="VARCHAR" />
		<result column="updator" property="updator" jdbcType="VARCHAR" />
		<result column="valid" property="valid" jdbcType="TINYINT" />
		<result column="state" property="state" jdbcType="TINYINT" />
		<result column="level" property="level" jdbcType="TINYINT" />
		<result column="optional1" property="optional1" jdbcType="VARCHAR" />
		<result column="optional2" property="optional2" jdbcType="VARCHAR" />
		<result column="optional3" property="optional3" jdbcType="VARCHAR" />
		<result column="domain_id" property="domainId" jdbcType="INTEGER" />

	</resultMap>



	<select id="selectRolesByUser" parameterType="map" resultMap="BaseResultMap">
		select r.* from users_roles ur ,roles r where ur.role_id = r.role_id
		and ur.user_id = #{userId,jdbcType=INTEGER}


	</select>


	<insert id="insertRolesAndUser" parameterType="map">
		insert into
		users_roles(user_id,role_id)
		values(#{userId,jdbcType=INTEGER},#{roleId,jdbcType=INTEGER})

	</insert>


	<delete id="deleteRolesAndUser" parameterType="map">

		delete from
		users_roles where user_id = #{userId,jdbcType=INTEGER}
	</delete>

	<select id="selectUsersByRole" resultType="org.ost.entity.user.Users">
		select 
		DISTINCT
		u.user_id userId,
		u.realname,
		u.dept_id deptId,
		u.email,
		u.c_id cId,
		u.phone_num phoneNum,
		u.department_name departmentName
		from users u
		left join
		users_roles ur on (u.user_id = ur.user_id)

		left join roles r on (ur.role_id = r.role_id)

		where u.valid = 0 and u.domain_id = #{domainId} and
		r.role_code = #{roleCode}
	</select>




</mapper>