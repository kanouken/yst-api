<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.ost.crm.dao.report.VisitReportDao">




	<sql id="whereCriteria">
		<where>
			<trim prefixOverrides="AND |OR">
				<if test="managerOwnerName != null and managerOwnerName !=''">
					and ve.createBy = #{managerOwnerName}
				</if>
				<if test="contactType != null and contactType !=''">
					and ve.visitType = #{contactType}
				</if>
				<if test="start != null">
					and ve.createTime >= #{start,jdbcType=TIMESTAMP}
				</if>
				<if test="end != null">
				<![CDATA[ and ve.createTime <= #{end,jdbcType=TIMESTAMP}]]>
				</if>
				<if test="hasBus != null">
					and
					<choose>
						<when test="hasBus == 0  ">
							ve.projectTypeID is null
						</when>
						<when test="hasBus ==1 ">
							ve.projectTypeID is not null
						</when>
						<otherwise>
						</otherwise>
					</choose>
				</if>
			</trim>
		</where>

	</sql>

	<select id="selectBy" resultType="java.util.HashMap">
		SELECT
		ve.visitType contactType ,
		ve.createTime createTime ,
		DATE_FORMAT(ve.createTime , '%Y-%m-%d %H:%i') createTimeStr ,
		ve.visitTime,
		date_format(ve.visitTime, '%Y/%m/%d') visitTimeStr,
		ve.id id ,
		ve.customerName name ,
		CASE
		WHEN pt. NAME IS NULL THEN
		'无'
		ELSE
		'有'
		END
		hasBusStr ,
		pt. NAME busChange,
		ve.createBy
		FROM
		tbl_visit_event ve
		LEFT JOIN tbl_project_type pt ON(ve.schemaID , ve.projectTypeID) = (pt.schemaID , pt.id)
		<include refid="whereCriteria"></include>
		order by ve.visitTime
		desc
	</select>


	<select id="selectSummary" resultType="java.util.HashMap">
		select
		sum(
		case when ve.projectTypeID is null then 0 else 1 end
		)
		hasBusChance,count(1) totalRecords,
		(
		length(replace(GROUP_CONCAT(DISTINCT ve.customerID),',','--')) -
		length(
		GROUP_CONCAT(DISTINCT ve.customerID)) )+1 totalCustomer
		from
		tbl_visit_event ve
		<include refid="whereCriteria"></include>
	</select>


	<select id="selectByMonth" resultType="java.util.HashMap">
		SELECT
		t.totalRecords total,
		ifnull(t.totalCustomer , 0)
		count ,
		ROUND(
		t.hasBusChance / t.totalRecords ,
		2
		)
		rate ,
		t.dateStr createTimeStr
		FROM
		(
		SELECT
		DATE_FORMAT(ve.createTime ,
		'%Y年%m月') dateStr ,
		sum(
		CASE
		WHEN
		ve.projectTypeID = null THEN
		0
		ELSE
		1
		END
		) hasBusChance ,
		count(1)
		totalRecords ,
		(
		length(
		REPLACE(
		GROUP_CONCAT(DISTINCT ve.customerID) ,
		',' ,
		'--'
		)
		) - length(
		GROUP_CONCAT(DISTINCT ve.customerID)
		)
		) + 1
		totalCustomer
		FROM
		tbl_visit_event ve
		WHERE
		DATE_FORMAT(ve.createTime ,
		'%Y') =
		DATE_FORMAT(now() , '%Y')
		<trim prefixOverrides="where" prefix="and">
			<include refid="whereCriteria"></include>
		</trim>
		GROUP BY
		DATE_FORMAT(ve.createTime , '%Y年%m月')
		) t
		ORDER BY
		t.dateStr
	</select>

	<resultMap type="org.ost.crm.model.visit.dto.VisitAttenceDto"
		id="supportAttenceMap">
		<id property="id" column="attenceId" />
		<result property="signInAddress" column="signInAddress" />
		<result property="signInTime" column="signInTime" />
		<result property="signInTimeStr" column="signInTimeStr" />
		<result property="signOutAddress" column="signOutAddress" />
		<result property="signOutTime" column="signOutTime" />
		<result property="signOutTimeStr" column="signOutTimeStr" />
	</resultMap>

	<resultMap type="org.ost.crm.model.visit.dto.VisitReportDetailDto"
		id="visitReportMap">
		<id property="visitId" column="visitEventID" />
		<result property="visitId" column="visitId" />
		<result property="customerName" column="customerName" />
		<result property="visitType" column="visitType" />
		<result property="visitTime" column="visitTime" />
		<result property="createTime" column="createTime" />
		<result property="visitTimeStr" column="visitTimeStr" />
		<result property="createTimeStr" column="createTimeStr" />
		<collection property="supporters"
			ofType="org.ost.crm.model.visit.dto.VisitSupportDto">
			<id column="veuID" property="id" />
			<result property="userID" column="userID" />
			<result property="userName" column="userName" />
			<result property="organizeID" column="organizeID" />
			<result property="organizeName" column="organizeName" />
			<result property="role" column="role" />
			<association property="attence" resultMap="supportAttenceMap"></association>
		</collection>


	</resultMap>
	<select id="selectByDepartmentAndTime" resultMap="visitReportMap">
		select
		ve.id
		visitEventID,
		ve.customerName,
		ve.visitType,
		ve.visitTime,
		date_format(ve.visitTime,
		'%Y/%m/%d')
		visitTimeStr,
		ve.createTime,
		date_format(ve.createTime,
		'%Y/%m/%d')
		createTimeStr,
		veu.id veuID,
		veu.organizeID,
		veu.userID,
		veu.organizeName,
		veu.userName,
		veu.role ,

		ae.id attenceId,
		ae.signInTime,
		ae.signInAddress,
		ae.signOutTime,
		ae.signOutAddress,
		date_format(ae.signOutTime,
		'%Y/%m/%d')
		signOutTimeStr,
		date_format(ae.signInTime,
		'%Y/%m/%d')
		signInTimeStr
		from
		tbl_visit_event
		ve


		left join tbl_visit_event_user veu

		on
		(ve.id,ve.schemaID) =
		(veu.visitEventID,veu.schemaID)

		left join
		tbl_attence_events ae

		on
		(veu.attenceEventID,veu.schemaID) =
		(ae.id,ae.schemaID)

		where ve.id in (

		select ve.id from tbl_visit_event
		ve left join tbl_visit_event_user veu
		on(ve.id,ve.schemaID) =
		(veu.visitEventID,veu.schemaID)

		where
		ve.isDelete = 0 and (veu.role = 0
		and veu.organizeID in
		 <foreach collection="depts" item="dept" open="(" close=")"
			separator=",">
			#{dept.deptId,jdbcType=INTEGER}
		</foreach>
		)

		and ve.createTime between
		#{startTime,jdbcType=TIMESTAMP} and
		#{endTime,jdbcType=TIMESTAMP}
		)

		order by
		ve.createBy,ve.createTime 

	</select>

</mapper>