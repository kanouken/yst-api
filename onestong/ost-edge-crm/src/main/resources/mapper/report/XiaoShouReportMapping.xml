<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.ost.crm.dao.report.XiaoShouReportDao">

    <select id="selectProjectUser" resultType="org.ost.entity.project.dto.ProjectContactsDto">
        select
        userID as id
        ,projectID
        ,userName as name
        ,organizeID as deptID
        ,organizeName as deptName
        from tbl_user_project
        where
        1 = 1
        and isDelete = '0'
        and schemaID = #{params.schemaID}
        and projectID in
          <foreach collection="params.projects" item="project" open="(" close=")" separator=",">
            #{project.id}
          </foreach>
        order by organizeName,userName
    </select>

    <select id="searchListChart" resultType="org.ost.entity.report.dto.XiaoShouReportDto">
        select
        sum(tbl_project.amount) as totalProjectAmount
        ,round(sum(ifnull((select sum(ifnull(rate,'0')) from tbl_project_payment where projectID = tbl_project.id and state = '1'),'0')) / count(1),0) as totalProjectPaymentRate
        ,date_format(tbl_project.createTime, '%Y年%m月') as createTimeStr
        <include refid="searchListSQL"></include>
        group by createTimeStr
    </select>

    <select id="searchListTotalCount" resultType="org.ost.entity.report.dto.XiaoShouReportDto">
        select
        sum(tbl_project.amount) as totalProjectAmount
        ,round(sum(ifnull((select sum(ifnull(rate,'0')) from tbl_project_payment where projectID = tbl_project.id and state = '1'),'0')) / count(1),0) as totalProjectPaymentRate
        <include refid="searchListSQL"></include>
    </select>

    <select id="searchListCount" resultType="java.lang.Integer">
        SELECT
        count(1)
        <include refid="searchListSQL"></include>
        limit #{params.page.nextPage} ,#{params.page.perPageSum}
    </select>

    <select id="searchList" resultType="org.ost.entity.report.dto.XiaoShouReportDto">
        select
        tbl_project.id
        ,tbl_project_customer.customerID
        ,tbl_project.name as projectName
        ,tbl_project.projectTypeID
        ,tbl_project_type.name as projectType
        ,tbl_project.state
        ,tbl_project.startTime
        ,tbl_project.amount as projectAmount
        ,date_format(tbl_project.createTime, '%Y-%m-%d') as createTimeStr
        ,ifnull((select sum(ifnull(rate,'0')) from tbl_project_payment where projectID = tbl_project.id and state = '1'),'0') as projectPaymentRate
        <include refid="searchListSQL"></include>
        order by tbl_project.startTime,tbl_project.name desc
        limit #{params.page.nextPage} ,#{params.page.perPageSum}
    </select>

    <sql id="searchListSQL">
        from tbl_project
        left join tbl_project_type
        on tbl_project_type.id = tbl_project.projectTypeID
        and tbl_project_type.isDelete = '0'
        left join tbl_project_customer
        on tbl_project.id = tbl_project_customer.projectID
        and tbl_project_customer.isDelete = '0'

        WHERE
        1 = 1
        and tbl_project.isDelete = '0'
        and tbl_project.schemaID = #{params.schemaID}
        and tbl_project_type.schemaID = #{params.schemaID}
        and tbl_project_customer.schemaID = #{params.schemaID}

        <if test='params.managerOwnerName != null and params.managerOwnerName != ""'>
            and tbl_project.id in (
              select projectID from tbl_user_project where userName like CONCAT('%','${params.managerOwnerName}','%') and isDelete = '0' and schemaID = #{params.schemaID}
            )
        </if>
        <if test='params.projectType != null and params.projectType != ""'>
            and tbl_project.projectTypeID = #{params.projectType}
        </if>
        <if test='params.startDate != null and params.startDate != ""'>
            and tbl_project.startTime >= #{params.startDate}
        </if>
        <if test='params.endDate != null and params.endDate != ""'>
            and tbl_project.startTime &lt;= #{params.endDate}
        </if>
    </sql>
</mapper>