<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.ost.crm.dao.visit.VisitDao">

	<insert id="insertVisitProject">
		insert into tbl_visit_event_project(
		visitEventID,
		projectID,
		createTIme,
		createBy,
		updateTime,
		updateBy,
		isDelete,
		schemaID
		) values

		<foreach collection="vps" item="vp" separator=",">
			(
			#{vp.visitEventID},
			#{vp.projectID},
			#{vp.createTime},
			#{vp.createBy},
			#{vp.updateTime},
			#{vp.updateBy},
			#{vp.isDelete},
			#{vp.schemaId}
			)
		</foreach>

	</insert>

	<delete id="deleteVisitProject">
		delete from tbl_visit_event_project
		where visitEventID
		= #{visitId}
	</delete>


	<insert id="insertVisitSupporter">
		insert into tbl_visit_event_user(
		visitEventID,
		userID,
		userName,
		organizeID,
		organizeName,
		role,
		createTIme,
		createBy,
		updateTime,
		updateBy,
		isDelete,
		schemaID,
		visitContent,
		visitDetail
		) values

		<foreach collection="vps" item="vp" separator=",">
			(
			#{vp.visitEventID},
			#{vp.userID},
			#{vp.userName},
			#{vp.organizeID},
			#{vp.organizeName},
			#{vp.role},
			#{vp.createTime},
			#{vp.createBy},
			#{vp.updateTime},
			#{vp.updateBy},
			#{vp.isDelete},
			#{vp.schemaId},
			#{vp.visitContent},
			#{vp.visitDetail}
			)
		</foreach>

	</insert>

	<insert id="insertVisitApprover">
		insert into tbl_visit_event_approval_user(
		visitEventID,
		userID,
		userName,
		organizeID,
		organizeName,
		role,
		approvalStatus,
		createTIme,
		createBy,
		updateTime,
		updateBy,
		isDelete,
		schemaID
		) values

		<foreach collection="vps" item="vp" separator=",">
			(
			#{vp.visitEventID},
			#{vp.userID},
			#{vp.userName},
			#{vp.organizeID},
			#{vp.organizeName},
			#{vp.role},
			#{vp.approvalStatus},
			#{vp.createTime},
			#{vp.createBy},
			#{vp.updateTime},
			#{vp.updateBy},
			#{vp.isDelete},
			#{vp.schemaId}
			)
		</foreach>

	</insert>

	<select id="selectByCustomer" resultType="org.ost.crm.model.visit.dto.VisitListDto">
		select
		ve.id,
		ve.visitType,
		ve.visitTime,
		date_format(ve.visitTime,
		'%Y/%m/%d') visitTimeStr,
		ve.createBy,
		ve.customerID customerId,
		ve.customerName,
		pt.`name` busChange,
		tbl_visit_event_user.visitDetail
		from tbl_visit_event ve
		left join tbl_project_type pt
		on (ve.schemaID,
		ve.projectTypeID) = (pt.schemaID, pt.id)
		left join tbl_visit_event_user
		on ve.id = tbl_visit_event_user.visitEventID

		where ve.isDelete = 0 and
		ve.schemaID = #{customer.schemaId} and ve.customerID =#{customer.id}
		<if test='params.contactDate != null and params.contactDate != ""'>
			and date_format(ve.visitTime, '%Y/%m/%d') =
			#{params.contactDate}
		</if>
		<if test='params.contactType != null and params.contactType != ""'>
			and ve.visitType = #{params.contactType}
		</if>
		<if test='params.createBy != null and params.createBy != ""'>
			and ve.createBy = #{params.createBy}
		</if>
		order by ve.createTIme

	</select>


	<select id="selectCountByCustomer" resultType="java.lang.Integer">
		select
		count(1)
		from tbl_visit_event ve left join

		tbl_project_type pt

		on
		(ve.schemaID, ve.projectTypeID) = (pt.schemaID, pt.id)

		where
		ve.isDelete = 0 and ve.schemaID = #{customer.schemaId} and
		ve.customerID =#{customer.id}
		<if test='params.contactDate != null and params.contactDate != ""'>
			and date_format(ve.visitTime, '%Y/%m/%d') =
			#{params.contactDate}
		</if>
		<if test='params.contactType != null and params.contactType != ""'>
			and ve.visitType = #{params.contactType}
		</if>
		<if test='params.createBy != null and params.createBy != ""'>
			and ve.createBy = #{params.createBy}
		</if>
	</select>


	<select id="selectMyVisit" parameterType="map" resultType="java.util.HashMap">
		select * from (
		select * from event_collection where
		<if test="userScope != null">
			user_id in (
			<foreach collection="userScope" item="item" index="index"
				separator=",">
				#{item.userId,jdbcType=INTEGER}
			</foreach>

			)
		</if>
		union all
		<!-- visit supporter -->
		SELECT
		`veu`.`userID` AS `user_id` ,
		`ve`.`id` AS `id` ,
		`ve`.`createBy`
		AS `creator` ,
		`ve`.`createTIme` AS `create_time` ,
		`ve`.`updateTime` AS
		`update_time` ,
		`ve`.`customerName` AS `title` ,
		NULL AS `content` ,
		`ae`.`signInAddress` AS `signed_address` ,
		`ae`.`signOutAddress` AS
		`signout_address` ,
		`ae`.`signInTime` AS `signed_time` ,
		NULL AS
		`lated_for_time` ,
		`ae`.`signOutTime` AS `signout_time` ,
		NULL AS
		`le_for_time` ,
		`ve`.`approvalStatus` AS `state` ,
		2.1 AS `type` ,
		`ae`.`state` AS `like_count` ,
		NULL AS `comment_count` ,
		null as pic,
		`ae`.`signInLng` AS `signed_longitude` ,
		`ae`.`signInLat` AS
		`signed_latitude` ,
		`ae`.`signOutLng` AS `signout_longitude` ,
		`ae`.`signOutLat` AS `signout_latitude`,
		<![CDATA[case when ae.state <> 3  or ae.state is null  then 2 else 10 end sort ]]>
		
		FROM
		(
		(
		`tbl_visit_event` `ve`
		LEFT JOIN `tbl_visit_event_user` `veu` ON(
		(`ve`.`id` =
		`veu`.`visitEventID`)
		)
		)
		LEFT JOIN `tbl_attence_events` `ae` ON(
		(
		`veu`.`attenceEventID` = `ae`.`id`
		)
		)
		)
		WHERE
		(
		(`veu`.`role` = 1)
		AND(`ve`.`approvalStatus` = 1)

		and veu.userID = #{userId}
		)


		UNION ALL
		SELECT
		`veau`.`userID` AS `user_id` ,
		`ve`.`id` AS `id` ,
		`ve`.`createBy` AS `creator` ,
		`ve`.`createTIme` AS `create_time` ,
		`ve`.`updateTime` AS `update_time` ,
		`ve`.`customerName` AS `title` ,
		`veu`.`visitDetail` AS `content` ,
		`ae`.`signInAddress` AS
		`signed_address` ,
		`ae`.`signOutAddress` AS `signout_address` ,
		`ae`.`signInTime` AS `signed_time` ,
		NULL AS `lated_for_time` ,
		`ae`.`signOutTime` AS `signout_time` ,
		NULL AS `le_for_time` ,
		`veau`.`approvalStatus` AS `state` ,
		(
		CASE
		WHEN(`veau`.`role` = 0) THEN
		2.3
		ELSE
		2.2
		END
		) AS `type` ,
		NULL AS `like_count` ,
		NULL AS
		`comment_count` ,
		null as pic,
		`ae`.`signInLng` AS `signed_longitude` ,
		`ae`.`signInLat` AS `signed_latitude` ,
		`ae`.`signOutLng` AS
		`signout_longitude` ,
		`ae`.`signOutLat` AS `signout_latitude`,
	 CASE  WHEN   veau.role = 0 and veau.approvalStatus = 0  then 1 else 10 end sort
		
		FROM
		(
		(
		(
		`tbl_visit_event` `ve`
		LEFT JOIN `tbl_visit_event_user` `veu` ON(
		(`ve`.`id` = `veu`.`visitEventID`)
		)
		)
		LEFT JOIN `tbl_attence_events`
		`ae` ON(
		(
		`veu`.`attenceEventID` = `ae`.`id`
		)
		)
		)
		LEFT JOIN
		`tbl_visit_event_approval_user` `veau` ON(
		(
		`ve`.`id` =
		`veau`.`visitEventID`
		)
		)
		)
		WHERE
		(`veu`.`role` = 0)
		and veau.userID =
		#{userId}

		) t
		where
	FLOOR(type) = 2
	and create_time between #{startTime,jdbcType=TIMESTAMP}
	and #{endTime,jdbcType=TIMESTAMP}
	order by sort asc,update_time desc 
	</select>


</mapper>